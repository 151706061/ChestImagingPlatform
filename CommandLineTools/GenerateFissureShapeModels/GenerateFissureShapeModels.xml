<?xml version="1.0" encoding="utf-8"?>
<executable>
  <category>Chest Imaging Platform</category>
  <title>ClassifyFissureParticles</title>
  <description><![CDATA[This program is used to generate fissure shape models based \
  on a training set. The basic approach is as follows: a reference image \
  is read and then registered to the label map for which the user \
  wants to produce fissure models. Additionally, a set of training \
  data is read in. These data sets consist of fissure indices and a \
  transform file that indicates the mapping between the training data \
  label map and the reference label map. Once the reference image is \
  registered to the input image, the resulting transform in \
  conjunction with the training data transform is used to map the \
  training fissure points to the input image's coordinate frame. This \
  is done repeatedly for all the training data sets. Once all the \
  fissure points are in the coordinate frame of the input image, PCA \
  is performed to get the mean and modes of the fissure points. This \
  data is then printed to file. \
  \
  The output file format is as follows: the first line contains the \
  origin of the input image. The second line contains the spacing of \
  the input image. The third line indicates the number of modes, \
  N. The fourth line is the mean vector. The entries are for the \
  continuous index z-values of the control points. The next N lines \
  contain the mode variances and a weight value. Upon generation of \
  the shape model file, the weight value will be 0. Later in the lobe \
  segmentation process, this value can be overwritten with a weight \
  has been found by fitting to particles data. The next N lines are \
  the modes themselves -- again, the modes represent the variation of \
  the control points in the z-direction (the range of our TPS \
  function). The length of each mode (and mean) vector is m, where m \
  indicates the number of control points. Finally, the next m lines \
  indicate the control point indices (the domain locations). Note \
  that the z-value for these entries is 0. This is to emphasize that \
  they are in the domain -- the x-y plane.]]>
  </description>
  <version>0.0.1</version>
  <license>Slicer</license>
  <contributor> Applied Chest Imaging Laboratory, Brigham and women's hospital</contributor>
  <acknowledgements>This work is funded by the National Heart, Lung, And Blood Institute of the National \
    Institutes of Health under Award Number R01HL116931. The content is solely the responsibility of the authors \
    and does not necessarily represent the official views of the National Institutes of Health.
  </acknowledgements>

  <parameters>
    <label>IO</label>
    <description>Input/output parameters</description>
    <image>
      <name>inputFileName</name>
      <label>Input label map</label>
      <channel>input</channel>
      <flag>i</flag>
      <longflag>inFileName</longflag>
      <description><![CDATA[Input label map to serve as starting point for lung lobe \
      segmentation .The level of lung segmentation 'grunularity' should be at the left lung right lung split \
      level. In other words, a mask divided into thirds (left and right) will work fine, as will one for which \
      only the left and right lung are labeled]]></description>
    </image>  

    <image>
      <name>refImageFileName</name>
      <label>Reference label map</label>
      <channel>input</channel>
      <longflag>refim</longflag>
      <description><![CDATA[Reference image label map corresponding to the reference points. \
      This is the image to which all other image data in the training set is registered to.]]></description>
      <default>NA</default>
    </image>  

    <string>
      <name>refPointsFileName</name>
      <label>Reference points file name</label>
      <channel>input</channel>
      <longflag>refps</longflag>
      <description><![CDATA[Reference points corresponding to the reference image.]]></description>
      <default>NA</default>
    </string>  

    <string>
      <name>rhShapeModelFileName</name>
      <label>Right horizontal shape model file name</label>
      <channel>input</channel>
      <longflag>orh</longflag>
      <description><![CDATA[Output right horizontal shape model file name.]]></description>
      <default>NA</default>
    </string>  

    <string>
      <name>roShapeModelFileName</name>
      <label>Right oblique shape model file name</label>
      <channel>input</channel>
      <longflag>oro</longflag>
      <description><![CDATA[Output right oblique shape model file name.]]></description>
      <default>NA</default>
    </string>  

    <string>
      <name>loShapeModelFileName</name>
      <label>Left oblique shape model file name</label>
      <channel>input</channel>
      <longflag>olo</longflag>
      <description><![CDATA[Output left oblique shape model file name.]]></description>
      <default>NA</default>
    </string>  

    <string>
      <name>outRefToInputTransformFileName</name>
      <label>Output Transform File Name</label>
      <channel>input</channel>
      <longflag>ot</longflag>
      <description><![CDATA[Output reference image to input label map transform file name.]]></description>
      <default>NA</default>
    </string>  

    <string-vector>
      <name>trainTransformFileVec</name>
      <label>Training transform files</label>
      <channel>input</channel>
      <longflag>trainTrans</longflag>
      <description><![CDATA[Training data set transform file. This file contains the \
      transform that is used to map the corresponding training data set's fissure points to the reference image's \
      coordinate system. It should immediately be followed with a region and type points file (specified with the \
      --trainPoints flag).]]></description>
    </string-vector>  

    <string-vector>
      <name>trainPointsFileVec</name>
      <label>Training points files</label>
      <channel>input</channel>
      <longflag>trainPoints</longflag>
      <description><![CDATA[Region and type points file corresponding to the previously \
      called transform file (see notes for --trainTrans).]]></description>
    </string-vector>  
  </parameters>

  <parameters>
    <double>
      <name>maxStepLength</name>
      <longflag>max</longflag>
      <description>Maximum step length for registration</description>
      <label>Max step length</label>
      <default>1.0</default>
    </double>

    <double>
      <name>minStepLength</name>
      <longflag>min</longflag>
      <description>Minimum step length for registration</description>
      <label>Min Step Length</label>
      <default>0.001</default>
    </double>

    <double>
      <name>translationScale</name>
      <flag>t</flag>
      <longflag>transScale</longflag>
      <description>Translation scale for affine registration</description>
      <label>Translation scale</label>
      <default>0.001</default>
    </double>

    <double>
      <name>downsampleFactor</name>
      <flag>d</flag>
      <longflag>down</longflag>
      <description>Downsample factor to apply before registration</description>
      <label>Downsample Factor</label>
      <default>4.0</default>
    </double>

    <integer>
      <name>numberOfIterations</name>
      <flag>n</flag>
      <longflag>numIters</longflag>
      <description>Number of iterations</description>
      <label>Number of iterations</label>
      <default>20</default>
    </integer>

  </parameters>
</executable>